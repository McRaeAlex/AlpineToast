{"version":3,"file":"index.es.js","sources":["../src/utils.ts","../src/configs.ts","../src/index.ts"],"sourcesContent":["export function maybeParseClasses(maybeString: string | undefined) {\n  if (typeof maybeString === \"string\" && maybeString.length > 0) {\n    return maybeString.split(\" \").filter((x) => x.length > 0);\n  }\n  return undefined;\n}\n","import { AlpineToastConfig } from \"./index\";\n\n/**\n * TailWindCSSConfig is a example configuration for TailwindCSS when using the\n * AlpineToast library\n */\nexport const TailWindCSSConfig: AlpineToastConfig = {\n  containerClasses:\n    \"absolute max-w-16 right-5 bottom-5 overflow-x-hidden space-y-2\",\n  toastClasses:\n    \"block p-4 bg-red-300 text-lg shadow-lg transition-transform duration-1000 transform translate-x-full\",\n  onShowClasses: \"translate-x-full\",\n  onHideClasses: \"translate-x-full\",\n  showProgressBar: true,\n  // position absolute is so it sticks to the bottom of the block element and left-0 and right-0 are so its the full width\n  progressBarClasses: \"h-1 bg-gray-100 bg-opacity-50 transition-all absolute bottom-0 left-0 right-0\",\n};\n","import * as JSON5 from \"json5\";\nimport { maybeParseClasses } from \"./utils\";\n\ninterface AlpineToastConfig {\n  toastContainer?: HTMLElement;\n  containerClasses?: string;\n  toastClasses?: string;\n  onShowClasses?: string;\n  onHideClasses?: string;\n  delayRemoval?: number;\n  duration?: number;\n  showProgressBar?: boolean;\n  progressBarClasses?: string;\n}\n\nclass AlpineToast {\n  container: HTMLElement;\n\n  containerClasses: string[];\n  toastClasses: string[];\n  onShowClasses: string[];\n  onHideClasses: string[];\n\n  showProgressBar: boolean;\n  progressBarClasses: string[];\n\n  duration: number;\n  delayRemoval: number;\n\n  constructor(config: AlpineToastConfig) {\n    this.containerClasses = maybeParseClasses(config.containerClasses) || [];\n    this.toastClasses = maybeParseClasses(config.toastClasses) || [];\n    this.onShowClasses = maybeParseClasses(config.onShowClasses) || [];\n    this.onHideClasses = maybeParseClasses(config.onHideClasses) || [];\n\n    this.showProgressBar = config.showProgressBar || false;\n    this.progressBarClasses =\n      maybeParseClasses(config.progressBarClasses) || [];\n\n    this.delayRemoval = config.delayRemoval || 1000;\n    this.duration = config.duration || 5000;\n\n    this.container = config.toastContainer || this.defaultContainer();\n    document.body.appendChild(this.container);\n  }\n\n  private defaultContainer() {\n    let container = document.createElement(\"div\");\n    container.classList.add(...this.containerClasses);\n    return container;\n  }\n\n  /**\n   * getToasts retrieves all the elements which become toasts\n   */\n  private getToasts() {\n    return document.querySelectorAll(\"[x-toast]\");\n  }\n\n  /**\n   * Adds a progress bar to a element\n   * @param elem The element to add the progress bar too\n   */\n  private addProgressBar(elem: Element) {\n    const progressBarElem = document.createElement(\"div\");\n    const classes = \"\".split(\" \").filter((cls) => cls.length > 0);\n    progressBarElem.classList.add(...classes);\n    elem.append(progressBarElem);\n    return progressBarElem;\n  }\n\n  /**\n   * makeToasts converts all the elements with the x-toast attribute into toasts\n   */\n  start() {\n    const toasts = this.getToasts();\n\n    toasts.forEach((elem) => {\n      // Get the args passed into the element\n      const args = JSON5.parse(elem.getAttribute(\"x-toast\") || \"{}\");\n      this.makeToast(elem, args);\n    });\n  }\n\n  /**\n   * makeToast turns a signle element into a toast\n   * @param elem The element to become the toast\n   */\n  makeToast(elem: Element, args: AlpineToastConfig) {\n    let duration = args.duration || this.duration; // Default or use the passed in duration\n    const total_duration = duration; // Keeps track of the total duration\n    const removeDelay = args.delayRemoval || this.delayRemoval;\n    const toastClasses =\n      maybeParseClasses(args.toastClasses) || this.toastClasses;\n    const onHideClasses =\n      maybeParseClasses(args.onHideClasses) || this.onHideClasses;\n    const onShowClasses =\n      maybeParseClasses(args.onShowClasses) || this.onShowClasses;\n    const showProgressBar = args.showProgressBar || this.showProgressBar;\n    const progressBarClasses =\n      maybeParseClasses(args.progressBarClasses) || this.progressBarClasses;\n\n    // Stop the toast from being created more than once\n    elem.removeAttribute(\"x-toast\");\n\n    // Add the default classes\n    elem.classList.add(...toastClasses);\n\n    // Maybe add the progress bar\n    let progressBarElem: HTMLDivElement | null = null;\n    if (showProgressBar) {\n      progressBarElem = this.addProgressBar(elem);\n      progressBarElem.classList.add(...progressBarClasses);\n    }\n\n    // Countdown the timer until it should disappear\n    const interval_time = 100; // ms\n    const update_timer = setInterval(() => {\n      if (!elem.matches(\":hover\")) {\n        duration = duration - interval_time;\n\n        // Update the progress bar if there is one\n        if (progressBarElem !== null) {\n          progressBarElem.style.width = `${(100 * duration) / total_duration}%`;\n        }\n      }\n\n      if (duration <= 0) {\n        // Stop updating the timer\n        clearInterval(update_timer);\n\n        // Toggle the classes\n        if (onHideClasses !== []) {\n          onHideClasses.forEach((cls) => elem.classList.toggle(cls));\n        }\n        // Remove the element from the dom\n        setTimeout(() => elem.remove(), removeDelay);\n      }\n    }, interval_time);\n\n    // Toggle some class\n    setTimeout(() => {\n      if (onShowClasses !== []) {\n        onShowClasses.forEach((cls) => elem.classList.toggle(cls));\n      }\n    }, 500);\n    // Add the element to the toast container for styling\n    this.container.appendChild(elem);\n  }\n\n  newToast(text: string, args: AlpineToastConfig = {}) {\n    const div = document.createElement(\"div\");\n    div.innerHTML = text;\n    this.makeToast(div, args);\n  }\n}\n\nexport { AlpineToast, AlpineToastConfig };\nexport { TailWindCSSConfig } from \"./configs\";\n"],"names":["JSON5.parse"],"mappings":"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"}